<Window x:Class="VaultManager.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:CyberOasis.VaultManager" xmlns:Converter="clr-namespace:CyberOasis.VaultManager;assembly=" mc:Ignorable="d" Title="Vault Manager"
    Background="#FF141414" MinWidth="305" Width="864" MinHeight="325" Height="665" WindowStartupLocation="CenterScreen" x:Name="Window" Icon="/icon.ico">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Overlay="/icon.ico" />
    </Window.TaskbarItemInfo>

    <Window.Resources>
        <ResourceDictionary>

            <Converter:ValueConverterGroup x:Key="ValueConverterGroup" />
            <Converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Converter:SizeConverter x:Key="SizeConverter" />
            <Converter:ValueConverterGroup x:Key="InvertVisibility">
                <Converter:InverseBooleanConverter />
                <BooleanToVisibilityConverter />
            </Converter:ValueConverterGroup>
            <Style x:Key="Corners">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="0" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style x:Key="TabCorners">
                <Style.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="0,0,0,0" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style x:Key="BorderCorners" TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="0" />
            </Style>

            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Corners}" />
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource Corners}" />
            <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource Corners}" />

            <Style x:Key="CategoryBorder" TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="0,0,6,6" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>
            <Style x:Key="CategoryInnerBorder" TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="3,3,0,0" />
            </Style>
            <Style x:Key="CategoryLabel" TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="CardOuterBorder" TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="0,0,3,4" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>
            <Style x:Key="CardInnerBorder" TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="1" />
            </Style>
            <Style x:Key="CardButtonPanel" TargetType="{x:Type WrapPanel}">

            </Style>
            <Style x:Key="MiscOpenButton" TargetType="{x:Type Button}" BasedOn="{StaticResource Corners}">
                <Setter Property="MinWidth" Value="50" />
                <Setter Property="Margin" Value="1,0,1,0" />
            </Style>

            <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabCorners}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Name="Border" BorderThickness="1,1,1,0">
                                <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Margin" Value="-2,-1,1,0" />
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemBackground2}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="False"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Margin" Value="-2,0,1,0" />
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemBackground1}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Margin" Value="-2,-2,1,0" />
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemBackground3}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Margin" Value="-2,-2,1,0 " />
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabItemBackground3}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!-- Edit colors here -->
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="1500" />
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="1500" />
            </Style>
            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource Corners}">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="1500" />
            </Style>
            <Style TargetType="{x:Type Expander}">
                <Setter Property="Foreground" Value="White" />
            </Style>
            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Foreground" Value="White" />
            </Style>
            <LinearGradientBrush x:Key="TabItemBackground1" EndPoint="0,1">
                <GradientStop Color="#FF454545" />
                <GradientStop Color="#FF141414" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="TabItemBackground2" EndPoint="0,1">
                <GradientStop Color="#FF646464" />
                <GradientStop Color="#FF343434" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="TabItemBackground3" EndPoint="0,1">
                <GradientStop Color="#FF848484" />
                <GradientStop Color="#FF545454" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="TabItemBackground4" EndPoint="0,1">
                <GradientStop Color="#FFA3A3A3" />
                <GradientStop Color="#FF747474" Offset="1" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="HeaderLabelBackground" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#00000000" />
                <GradientStop Color="#00000000" Offset="1" />
                <GradientStop Color="#7FFF00FF" Offset="0.5" />
            </LinearGradientBrush>
            <Style x:Key="UtilitiesCategoryBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource CategoryBorder}">
                <Setter Property="Background" Value="#5D2E8E" />
                <Setter Property="BorderBrush" Value="Silver" />
            </Style>
            <Style x:Key="UtilitiesCategoryLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource CategoryLabel}">
                <Setter Property="Foreground" Value="#43b047" />
            </Style>
            <Style x:Key="UtilitiesCategoryLabelPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Background" Value="Black" />
            </Style>
            <Style x:Key="UtilitiesCardOuterBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource CardOuterBorder}">
                <Setter Property="Background" Value="#049CD8" />
                <Setter Property="BorderBrush" Value="Black" />
            </Style>
            <Style x:Key="UtilitiesAppLabelPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Background" Value="Black" />
            </Style>
            <Style x:Key="UtilitiesAppLabel" TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="#FBD000" />
            </Style>
            <!-- Try not to edit stuff below -->


        </ResourceDictionary>
    </Window.Resources>

    <Grid x:Name="MainGrid">
        <Grid.Background>
            <ImageBrush Stretch="UniformToFill" ImageSource="/bg.png" Opacity="0.65" />
        </Grid.Background>
        <TabControl x:Name="Tabs" Background="#CC141414">
            <TabItem  x:Name="DevTab" Foreground="Red">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/VaultAssets/Icons/dev.png" Height="16" Margin="-6,0,6,0"/>
                        <TextBlock>Dev</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <StackPanel>
                                <Label Content="Left Data" Margin="-2,0,0,0" Background="{DynamicResource HeaderLabelBackground}" />
                                <WrapPanel Orientation="Horizontal" >
                                    <Button x:Name="ButtonLFile" Content="from file" Padding="2,1,2,1" Margin="2,0,0,2" />
                                    <Button x:Name="ButtonLFolder" Content="from folder" Padding="2,1,2,1" Margin="2,0,0,2" />
                                    <Button x:Name="ButtonLOld" Content="from old structure (with Manifests)" Padding="2,1,2,1" Margin="2,0,0,2" />
                                    <Button x:Name="ButtonLMerge" Content="Merge right into left" Padding="2,1,2,1" Margin="2,0,0,2" />
                                    <Button x:Name="ButtonLSave" Content="Save (left.json)" Padding="2,1,2,1" Margin="2,0,0,2" />
                                </WrapPanel>
                                <Expander Header="Data Editor" IsExpanded="True">
                                    <StackPanel>
                                        <TextBox x:Name="DataL" AcceptsReturn="True" AcceptsTab="True" MinLines="5" MaxLines="24" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" />
                                        <Button x:Name="ButtonLVerify" Content="Verify" Padding="2,1,2,1"/>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                            <StackPanel Grid.Column="1">
                                <Label Content="Right Data" Margin="0,0,-2,0" Background="{DynamicResource HeaderLabelBackground}" />
                                <WrapPanel Orientation="Horizontal" >
                                    <Button x:Name="ButtonRFile" Content="from file" Margin="2,0,0,2" Padding="2,1,2,1"/>
                                    <Button x:Name="ButtonRFolder" Content="from folder" Margin="2,0,0,2" Padding="2,1,2,1"/>
                                    <Button x:Name="ButtonROld" Content="from old structure (with Manifests)" Padding="2,1,2,1" Margin="2,0,0,2" />
                                    <Button x:Name="ButtonRMerge" Content="Merge left into right" Margin="2,0,0,2" Padding="2,1,2,1"/>
                                    <Button x:Name="ButtonRSave" Content="Save (right.json)" Margin="2,0,0,2" Padding="2,1,2,1"/>

                                </WrapPanel>
                                <Expander Header="Data Editor" IsExpanded="True">
                                    <StackPanel>
                                        <TextBox x:Name="DataR" AcceptsReturn="True" AcceptsTab="True" MinLines="5" MaxLines="24" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" />
                                        <Button x:Name="ButtonRVerify" Content="Verify" Padding="2,1,2,1"/>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </Grid>


                        <StackPanel Margin="0,0,0,5">
                            <Label Content="Backup Old Manifests structure" Margin="-2,0,-2,0" Background="{DynamicResource HeaderLabelBackground}" />
                            <StackPanel Margin="10,0,10,0">
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="55" />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Folder:" HorizontalAlignment="Left" Background="Transparent" Height="20" Padding="5,0,5,0" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="Backup" Height="20" MinWidth="200" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_Backup" Content="Browse..." HorizontalAlignment="Right" Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20" Grid.Column="2" />
                                </Grid>
                                <Button x:Name="ButtonBackupStart" Content="Start Action" HorizontalAlignment="Right" Padding="2,1,2,1" Height="20" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem  Foreground="DarkGray">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/VaultAssets/Icons/integrated.png" Height="16" Margin="-6,0,6,0"/>
                        <TextBlock>Integrated Tools</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel>


                        <StackPanel Margin="0,0,0,5">
                            <Label Background="{DynamicResource HeaderLabelBackground}" Content="Folderize" Margin="-2,0,-2,0" Cursor="Help">
                                <Label.ToolTip>
                                    <TextBlock>Structures similar named files in folders or flattens the structure to one folder.</TextBlock>
                                </Label.ToolTip>
                            </Label>
                            <StackPanel Margin="10,0,10,0">
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <RadioButton x:Name="RadioFolderize" Content="Folderize" GroupName="Folderize" IsChecked="True" Height="20" Width="100" VerticalContentAlignment="Center" Cursor="Help">
                                        <RadioButton.ToolTip>
                                            <TextBlock>Copys or moves files and sorts them in folders named like the files.<LineBreak /> "(Track 00)" and "(Disc 00)" in the filename are ignored.</TextBlock>
                                        </RadioButton.ToolTip>
                                    </RadioButton>
                                    <RadioButton x:Name="RadioUnfolderize" Content="Unfolderize" GroupName="Folderize" Height="20" VerticalContentAlignment="Center" Width="100" Cursor="Help">
                                        <RadioButton.ToolTip>
                                            <TextBlock>Copys or moves files and flattens the file structure to all files in one folder (no sub-folders).</TextBlock>
                                        </RadioButton.ToolTip>
                                    </RadioButton>
                                </StackPanel>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="55" />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Input:" Padding="2,2,2,2" Height="20" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Width="34" HorizontalAlignment="Left" />
                                    <TextBox x:Name="FolderizeInput" Height="20" MinWidth="200" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_FolderizeInput" Content="Browse..." Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20" Grid.Column="2" HorizontalAlignment="Right" />
                                </Grid>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="55" />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Output:" Padding="2,2,2,2" Height="20" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Width="44" HorizontalAlignment="Left" />
                                    <TextBox x:Name="FolderizeOutput" Height="20" MinWidth="150" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_FolderizeOutput" Content="Browse..." HorizontalAlignment="Right" Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20" Grid.Column="2" />
                                </Grid>
                                <Expander Header="Settings" Margin="0,0,0,5">
                                    <Grid Height="{Binding ActualHeight, ConverterParameter=250, Converter={StaticResource SizeConverter}, ElementName=Window, Mode=OneWay}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="1*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="1*" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox x:Name="FolderizeESDE" VerticalContentAlignment="Center" Content="ES-DE Mode" Cursor="Help" IsEnabled="{Binding IsChecked, ElementName=RadioFolderize}" HorizontalAlignment="Left" Margin="0,5,0,0"
                                            Height="20" VerticalAlignment="Top">
                                            <CheckBox.ToolTip>
                                                <TextBlock>Flat File structure (no sub-folders). But games having a .m3u, .gdi or .cue get their own folder to use ES-DE's "Directory as File" feature.</TextBlock>
                                            </CheckBox.ToolTip>
                                        </CheckBox>
                                        <CheckBox x:Name="FolderizeMove" Content="move instead of copy" HorizontalAlignment="Left" Margin="0,30,0,0" IsChecked="False" Height="20" VerticalContentAlignment="Center" VerticalAlignment="Top" Grid.Row="0" />
                                        <CheckBox x:Name="FolderizeEmptyFolders" Content="remove empty folders in input" HorizontalAlignment="Left" IsChecked="True" Height="20" VerticalContentAlignment="Center" VerticalAlignment="Center"
                                            Margin="5,50,0,10" IsEnabled="{Binding IsChecked, ElementName=FolderizeMove}" />

                                        <Label Content="Whitelist:" VerticalAlignment="Top" Padding="0,2,2,2" VerticalContentAlignment="Center" Grid.Column="1" HorizontalAlignment="Left" Margin="0,0,10,0" Grid.RowSpan="2"
                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioFolderizeWhitelist}" />
                                        <Label Content="Blacklist:" VerticalAlignment="Top" Padding="0,2,2,2" VerticalContentAlignment="Center" Grid.Column="1" HorizontalAlignment="Left" Margin="0,0,10,0" Grid.RowSpan="2"
                                            Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioFolderizeBlacklist}" />
                                        <CheckBox x:Name="FolderizeRegex" Content="Use RegEx instead" HorizontalAlignment="Left" Padding="0,2,2,2" Margin="80,0,10,0" VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Column="1"
                                            Foreground="White" Height="20" Grid.RowSpan="2" Visibility="{Binding IsChecked, Converter={StaticResource InvertVisibility}, ElementName=RadioFolderizeAll}" />
                                        <ListView x:Name="ListFolderizeExtWhite" Margin="0,20,0,0" SelectionMode="Multiple" Grid.Column="1" Grid.RowSpan="2" MinHeight="75">
                                            <ListView.Style>
                                                <Style BasedOn="{StaticResource Corners}">
                                                    <Setter Property="Control.Visibility" Value="Hidden" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=RadioFolderizeWhitelist}" Value="true" />
                                                                <Condition Binding="{Binding IsChecked, ElementName=FolderizeRegex}" Value="false" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Control.Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListView.Style>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=[0]}" />
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource Corners}">
                                                    <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=[1], UpdateSourceTrigger=PropertyChanged}" />
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                        </ListView>
                                        <ListView x:Name="ListFolderizeExtBlack" Margin="0,20,0,0" SelectionMode="Multiple" Grid.Column="1" Grid.RowSpan="2" MinHeight="75">
                                            <ListView.Style>
                                                <Style BasedOn="{StaticResource Corners}">
                                                    <Setter Property="Control.Visibility" Value="Hidden" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=RadioFolderizeBlacklist}" Value="true" />
                                                                <Condition Binding="{Binding IsChecked, ElementName=FolderizeRegex}" Value="false" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Control.Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListView.Style>
                                            <ListView.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=[0]}" />
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource Corners}">
                                                    <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=[1], UpdateSourceTrigger=PropertyChanged}" />
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                        </ListView>

                                        <TextBox x:Name="FolderizeRegexWhite" Margin="0,20,0,0" Grid.Column="1" Grid.RowSpan="2" MinHeight="75" TextWrapping="Wrap">
                                            <TextBox.Style>
                                                <Style BasedOn="{StaticResource Corners}">
                                                    <Setter Property="Control.Visibility" Value="Hidden" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=RadioFolderizeWhitelist}" Value="true" />
                                                                <Condition Binding="{Binding IsChecked, ElementName=FolderizeRegex}" Value="true" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Control.Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                        <TextBox x:Name="FolderizeRegexBlack" Margin="0,20,0,0" Grid.Column="1" Grid.RowSpan="2" MinHeight="75" TextWrapping="Wrap">
                                            <TextBox.Style>
                                                <Style BasedOn="{StaticResource Corners}">
                                                    <Setter Property="Control.Visibility" Value="Hidden" />
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsChecked, ElementName=RadioFolderizeBlacklist}" Value="true" />
                                                                <Condition Binding="{Binding IsChecked, ElementName=FolderizeRegex}" Value="true" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="Control.Visibility" Value="Visible" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>

                                        <Label Content="Extensions Mode:" VerticalAlignment="Top" Padding="2,2,2,2" Height="20" VerticalContentAlignment="Center" Grid.RowSpan="2" Grid.Row="1" />
                                        <RadioButton x:Name="RadioFolderizeWhitelist" Content="Whitelist" HorizontalAlignment="Left" Margin="0,20,0,0" IsChecked="True" GroupName="ExtensionsMode" Width="70" Height="20"
                                            VerticalContentAlignment="Center" VerticalAlignment="Top" Grid.Row="1" />
                                        <RadioButton x:Name="RadioFolderizeBlacklist" Content="Blacklist" HorizontalAlignment="Left" Margin="75,20,0,0" VerticalAlignment="Top" GroupName="ExtensionsMode" Width="70" Height="20"
                                            VerticalContentAlignment="Center" Grid.Row="1" />
                                        <RadioButton x:Name="RadioFolderizeAll" Content="All" HorizontalAlignment="Left" Margin="150,20,0,0" VerticalAlignment="Top" GroupName="ExtensionsMode" Width="70" Height="20" VerticalContentAlignment="Center"
                                            Grid.Row="1" />
                                    </Grid>
                                </Expander>
                                <Button x:Name="ButtonFolderizeStart" Content="Start Action" Padding="2,1,2,1" Height="20" HorizontalAlignment="Right" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel>
                            <Label Background="{DynamicResource HeaderLabelBackground}" Content="Merge or Split image" Margin="-2,0,-2,0" Cursor="Help">
                                <Label.ToolTip>
                                    <TextBlock>Splits or merges raw .bin files according to the provided .cue.</TextBlock>
                                </Label.ToolTip>
                            </Label>
                            <StackPanel Margin="10,0,10,0">
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <RadioButton x:Name="RadioMerge" Content="Merge" Height="20" GroupName="Merge" VerticalContentAlignment="Center" IsChecked="True" Width="100" />
                                    <RadioButton x:Name="RadioSplit" Content="Split" Height="20" GroupName="Merge" VerticalContentAlignment="Center" Width="100" />
                                </StackPanel>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="55" />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Input Cue:" HorizontalAlignment="Left" Background="Transparent" Height="20" Padding="5,0,5,0" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="InputMerge" VerticalAlignment="Top" Height="20" MinWidth="200" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_InputMerge" Content="Browse..." HorizontalAlignment="Right" Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20" Grid.Column="2" />
                                </Grid>
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="55" />
                                    </Grid.ColumnDefinitions>
                                    <Label x:Name="LabelOutputMerge" Content="Output Cue:" HorizontalAlignment="Left" Background="Transparent" Height="20" Padding="5,0,5,0" VerticalContentAlignment="Center"
                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioMerge}" />
                                    <TextBox x:Name="OutputMerge" Height="20" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioMerge}" MinWidth="200" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_OutputMerge" Content="Browse..." HorizontalAlignment="Right" Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20"
                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioMerge}" Grid.Column="2" />

                                    <Label x:Name="LabelOutputSplit" Content="Output Folder:" HorizontalAlignment="Left" Background="Transparent" Height="20" Padding="5,0,5,0" VerticalContentAlignment="Center"
                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioSplit}" />
                                    <TextBox x:Name="OutputSplit" Height="20" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioSplit}" MinWidth="200" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_OutputSplit" Content="Browse..." HorizontalAlignment="Right" Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20"
                                        Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=RadioSplit}" Grid.Column="2" />
                                </Grid>
                                <Button x:Name="ButtonMergeStart" Content="Start Action" HorizontalAlignment="Right" Padding="2,1,2,1" Height="20" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Margin="0,0,0,5" Visibility="Collapsed">
                            <Label Content="M3U Generator" Margin="-2,0,-2,0" Background="{DynamicResource HeaderLabelBackground}" />
                            <StackPanel Margin="10,0,10,0">
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="55" />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Folder:" HorizontalAlignment="Left" Background="Transparent" Height="20" Padding="5,0,5,0" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="M3UGen" Height="20" MinWidth="200" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_M3UGen" Content="Browse..." HorizontalAlignment="Right" Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20" Grid.Column="2" />
                                </Grid>
                                <Button x:Name="ButtonM3UGenStart" Content="Start Action" HorizontalAlignment="Right" Padding="2,1,2,1" Height="20" />
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Margin="0,0,0,5">
                            <Label Content="Cue Generator (experimental)" Margin="-2,0,-2,0" Background="{DynamicResource HeaderLabelBackground}" Cursor="Help">
                                <Label.ToolTip>
                                    <TextBlock>Creates a CueSheet object from a folder of raw bin files.<LineBreak /> Assumes tracks are in alphanumerical order. Only works for non-merged binaries.</TextBlock>
                                </Label.ToolTip>
                            </Label>
                            <StackPanel Margin="10,0,10,0">
                                <Grid Margin="0,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="85" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="55" />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Folder:" HorizontalAlignment="Left" Background="Transparent" Height="20" Padding="5,0,5,0" VerticalContentAlignment="Center" />
                                    <TextBox x:Name="CueGen" Height="20" MinWidth="200" IsReadOnly="True" Grid.Column="1" />
                                    <Button x:Name="Browse_CueGen" Content="Browse..." HorizontalAlignment="Right" Padding="2,1,2,1" HorizontalContentAlignment="Center" Height="20" Grid.Column="2" />
                                </Grid>
                                <Button x:Name="ButtonCueGenStart" Content="Start Action" HorizontalAlignment="Right" Padding="2,1,2,1" Height="20" />
                            </StackPanel>
                        </StackPanel>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</Window>